"use strict";(self.webpackChunknew_website=self.webpackChunknew_website||[]).push([[3],{32802:(e,o,t)=>{t.d(o,{A:()=>s});const s=t.p+"assets/images/ide-blog-hero-bff015f83214327fc5a13259d13f5e38.svg"},54372:e=>{e.exports=JSON.parse('{"permalink":"/blog/2025/09/15/ide-extension","source":"@site/blog/2025-09-15-ide-extension.mdx","title":"Give your Python IDE a Glow-Up with Pyrefly","description":"Learn how Pyrefly\'s language server capabilities can help you navigate large Python codebases with ease.","date":"2025-09-15T00:00:00.000Z","tags":[{"inline":true,"label":"language-server","permalink":"/blog/tags/language-server"},{"inline":true,"label":"IDE","permalink":"/blog/tags/ide"}],"readingTime":6.135,"hasTruncateMarker":true,"authors":[{"name":"Abby Mitchell","url":"https://github.com/javabster","key":"abbym","page":null},{"name":"Kyle Into","url":"https://www.kylei.dev/","key":"kylei","page":null}],"frontMatter":{"title":"Give your Python IDE a Glow-Up with Pyrefly","description":"Learn how Pyrefly\'s language server capabilities can help you navigate large Python codebases with ease.","authors":["abbym","kylei"],"tags":["language-server","IDE"],"image":"https://pyrefly.org/assets/images/ide-blog-hero-bff015f83214327fc5a13259d13f5e38.svg","hide_table_of_contents":false},"unlisted":false,"nextItem":{"title":"Why Today\u2019s Python Developers Are Embracing Type Hints","permalink":"/blog/why-typed-python"}}')},58337:(e,o,t)=>{t.d(o,{A:()=>s});const s=t.p+"assets/images/ide-settings-1ad2d1d2b8aa91be0826783fcdac8ecb.png"},90003:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var s=t(54372),n=t(74848),r=t(28453);const i={title:"Give your Python IDE a Glow-Up with Pyrefly",description:"Learn how Pyrefly's language server capabilities can help you navigate large Python codebases with ease.",authors:["abbym","kylei"],tags:["language-server","IDE"],image:"https://pyrefly.org/assets/images/ide-blog-hero-bff015f83214327fc5a13259d13f5e38.svg",hide_table_of_contents:!1},a=void 0,l={authorsImageUrls:[void 0,void 0]},d=[{value:"<strong>Background - What is a Language Server and Why Does It Matter?</strong>",id:"background---what-is-a-language-server-and-why-does-it-matter",level:2},{value:"<strong>Instagram - A Case Study on the Pain of Slow Code Navigation</strong>",id:"instagram---a-case-study-on-the-pain-of-slow-code-navigation",level:2},{value:"<strong>Pyrefly LSP at a Glance</strong>",id:"pyrefly-lsp-at-a-glance",level:2},{value:"<strong>How to add Pyrefly to your IDE</strong>",id:"how-to-add-pyrefly-to-your-ide",level:2},{value:"<strong>Conclusion</strong>",id:"conclusion",level:2}];function c(e){const o={a:"a",code:"code",em:"em",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.p,{children:(0,n.jsx)(o.img,{src:t(32802).A+"",width:"1214",height:"643"})}),"\n",(0,n.jsxs)(o.p,{children:["The challenges of managing ever-growing codebases are hardly new. As far back as 1995, Niklaus Wirth, (creator of programming language Pascal) already emphasized the importance of keeping software lean in his essay ",(0,n.jsx)(o.a,{href:"https://l.facebook.com/l.php?u=https%3A%2F%2Fpeople.inf.ethz.ch%2Fwirth%2FArticles%2FLeanSoftware.pdf&h=AT2RMg0sKqoJzLiFe4OIBZRxVLklBs9SeIlBrZnHnaEVP2VVCAG8Z9vuiFo4kP_MoegKDrRBKhxV_0cuWBijok2KhvKG9nLhUm5USFJC2Nzlq8yhSOvWirfU_BnPIve4Ofo7c-emKgWgbBEI3w",children:"A Plea for Lean Software"}),". Fast forward to today: many programmers still face the reality that, despite their best coding intentions, as projects grow in size and complexity, so do their codebases. Even when a project scales to millions of lines of code, developers still expect their IDE to be fast, accurate, and efficient. And with increasingly large and interconnected (dare I say, spaghetti?) code, you probably rely on your IDE even more to help you navigate the chaos (ahem I mean complexity)."]}),"\n",(0,n.jsx)(o.p,{children:"But what you may not have thought about before is that scaling project size presents a real challenge for your IDE: how do you keep code navigation tools responsive and reliable when the codebase keeps expanding? In this blog, we\u2019ll explore this challenge and introduce you to Pyrefly - a scalable language server and typechecker designed to keep your Python development experience smooth and snappy at scale."}),"\n",(0,n.jsx)(o.h2,{id:"background---what-is-a-language-server-and-why-does-it-matter",children:(0,n.jsx)(o.strong,{children:"Background - What is a Language Server and Why Does It Matter?"})}),"\n",(0,n.jsxs)(o.p,{children:["The Language Server Protocol (LSP) is a standardized way for code editors to communicate with language-specific servers that provide features like autocomplete, go-to-definition, and symbol renaming. Instead of each editor implementing these features separately, LSP allows a single language server to support multiple editors. Pyrefly\u2019s language server capabilities are based on the ",(0,n.jsx)(o.a,{href:"https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/",children:"Language Server Protocol Specification"})," and are designed to still be blazing fast even on code bases with over 20 million lines of code."]}),"\n",(0,n.jsxs)(o.p,{children:["A key capability of many language servers, including Pyrefly, is typechecking, which enhances IDE features by providing type diagnostics. Pyrefly\u2019s language server not only reports type errors like basic type checkers, such as ",(0,n.jsx)(o.a,{href:"https://github.com/python/mypy",children:"Mypy"}),", but also replaces core IDE functionalities including \u201cfind definition,\u201d hover (displaying types and docstrings), and completions. By consolidating these features, Pyrefly ensures that the types it checks and the types displayed in your IDE will always match."]}),"\n",(0,n.jsx)(o.h2,{id:"instagram---a-case-study-on-the-pain-of-slow-code-navigation",children:(0,n.jsx)(o.strong,{children:"Instagram - A Case Study on the Pain of Slow Code Navigation"})}),"\n",(0,n.jsxs)(o.p,{children:["Meta operates an incredibly large Python codebase - a massive monorepo containing ",(0,n.jsx)(o.strong,{children:"almost 1.5 million Python files"})," maintained by thousands of developers. Instagram is one of those projects, with ",(0,n.jsx)(o.strong,{children:"over"})," ",(0,n.jsx)(o.strong,{children:"20 million lines"})," of Python code. At this scale, even simple navigation tasks like jumping to a function definition, searching for references, or loading syntax highlights could take almost a minute in the worst cases. That may not sound like a lot on its own, but experiencing it every few minutes quickly becomes frustrating and has a tangible impact on developer productivity, especially when multiplied across a large company like Meta."]}),"\n",(0,n.jsxs)(o.p,{children:["Pyrefly emerged in part to address this exact challenge (you can read more about our origin story in our ",(0,n.jsx)(o.a,{href:"https://pyrefly.org/blog/introducing-pyrefly/",children:"intro blog"}),"). In real world use cases, developers who switched from Pyright (the default LSP for VSCode) to Pyrefly spent ",(0,n.jsx)(o.strong,{children:"98%"})," less time waiting on hover results and go-to definition was ",(0,n.jsx)(o.strong,{children:"~10x"})," faster. On the slowest files (p99), these IDE responses grew from an order of minutes to seconds (",(0,n.jsx)(o.strong,{children:"30x"})," improvement). If those numbers are hard to visualise, the TL;DR is that this upgrade took instagram developers from questioning \u201cis my editor frozen?\u201d to not giving their IDE a second thought."]}),"\n",(0,n.jsxs)("div",{style:{display:"flex",flexDirection:"row",maxWidth:"100%"},children:[(0,n.jsx)("video",{src:"/videos/pyrefly-ide-comparison.mov",style:{maxWidth:"50%"},muted:!0,loop:!0,autoPlay:!0,playsInline:!0,preload:"metadata"}),(0,n.jsx)("video",{src:"/videos/pyright-ide-comparison.mov",style:{maxWidth:"50%"},muted:!0,loop:!0,autoPlay:!0,playsInline:!0,preload:"metadata"})]}),"\n",(0,n.jsx)("p",{style:{textAlign:"center"},children:(0,n.jsx)(o.em,{children:"Pyrefly (left) vs Pyright (right) autocomplete speed comparison"})}),"\n",(0,n.jsx)(o.p,{children:"These early results are certainly promising indications of a smoother developer experience for Meta engineers, and we're excited to share more insights as developers continue using Pyrefly. But Pyrefly isn\u2019t just for Meta developers, it\u2019s open source and ready for everyone to explore! If you\u2019re curious about Pyrefly\u2019s language server features and want to see how to get it up and running in your IDE, keep reading!"}),"\n",(0,n.jsx)(o.h2,{id:"pyrefly-lsp-at-a-glance",children:(0,n.jsx)(o.strong,{children:"Pyrefly LSP at a Glance"})}),"\n",(0,n.jsx)(o.p,{children:"While Pyrefly is still in Alpha as of the time of posting, it already supports most of the essential IDE capabilities that Python developers rely on daily, such as:"}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.strong,{children:"Autocomplete:"})," predicts what you\u2019re likely to type next, reducing the need to remember exact names of variables, functions, and others, even importing them automatically for you"]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.strong,{children:"Go to Definition"}),": allows you to jump directly to the source of a function, class, or variable with a single click."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.strong,{children:"Hover:"})," when you hover over a symbol, Pyrefly displays useful information such as type annotations, documentation, and inferred types."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.strong,{children:"Rename symbols"}),": right click to rename variables, functions, or classes across the entire codebase."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.strong,{children:"Typechecking"}),": Pyrefly will also show type errors and infer types, which you can toggle on or off in your Pyrefly settings (more info in the next section)"]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.strong,{children:"And many more"}),"! explore the full list and details in the ",(0,n.jsx)(o.a,{href:"https://pyrefly.org/en/docs/IDE/",children:"Pyrefly IDE docs"}),"."]}),"\n"]}),"\n",(0,n.jsxs)(o.p,{children:["The Pyrefly team and our open-source community are continuously working on improvements and new features so stay tuned for updates! We also want to hear from you - what features do you need to make your IDE experience better? ",(0,n.jsx)(o.a,{href:"https://github.com/facebook/pyrefly/issues",children:"Open a GitHub issue"})," or ",(0,n.jsx)(o.a,{href:"https://discord.gg/Cf7mFQtW7W",children:"join our discord"})," to share your thoughts."]}),"\n",(0,n.jsx)(o.h2,{id:"how-to-add-pyrefly-to-your-ide",children:(0,n.jsx)(o.strong,{children:"How to add Pyrefly to your IDE"})}),"\n",(0,n.jsxs)(o.p,{children:["Pyrefly can be used in a range of IDEs, including standard GUI editors like ",(0,n.jsx)(o.strong,{children:"VSCode"})," or ",(0,n.jsx)(o.strong,{children:"Pycharm"}),", terminal editors like ",(0,n.jsx)(o.strong,{children:"Neovim"})," or ",(0,n.jsx)(o.strong,{children:"Emacs"}),", and AI editors like ",(0,n.jsx)(o.strong,{children:"Cursor"})," or ",(0,n.jsx)(o.strong,{children:"Windsurf"}),". You can check out the full list of supported IDEs in the ",(0,n.jsx)(o.a,{href:"https://pyrefly.org/en/docs/IDE/",children:"Pyrefly IDE docs"}),"."]}),"\n",(0,n.jsx)(o.p,{children:"For GUI editors, setup is pretty straightforward and generally follows the same steps:"}),"\n",(0,n.jsxs)(o.ol,{children:["\n",(0,n.jsx)(o.li,{children:"Search for \u201cpyrefly\u201d in the appropriate extension marketplace for your IDE and install it"}),"\n",(0,n.jsx)(o.li,{children:"Open any Python file and the extension will activate automatically"}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.strong,{children:"Note"}),": if using an editor other than VSCode you may need to uninstall the default Python LSP in your editor. You can do this by opening your extension settings and setting ",(0,n.jsx)(o.code,{children:'"Language Server: None"'})]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.strong,{children:"Optional"}),": we recommend all developers use a typechecker as part of their regular software development process, however we know that type errors in your IDE can be noisy, so the type errors feature is not turned on by default if you don't have a ",(0,n.jsx)(o.code,{children:"pyrefly.toml"})," (from ",(0,n.jsx)(o.code,{children:"pyrefly init"}),"). If you DO want type errors to show up in your editor everywhere (as red squiggles), you should update your extension settings to include ",(0,n.jsx)(o.code,{children:'"python.pyrefly.displayTypeErrors": "force-on"'})]}),"\n"]}),"\n",(0,n.jsx)(o.p,{children:(0,n.jsx)(o.img,{src:t(58337).A+"",width:"1975",height:"403"})}),"\n",(0,n.jsxs)(o.p,{children:["For terminal editors the setup process can vary depending on which editor you use so check out the ",(0,n.jsx)(o.a,{href:"https://pyrefly.org/en/docs/IDE/#other-editors",children:"installation documentation"})," for specific instructions."]}),"\n",(0,n.jsx)(o.h2,{id:"conclusion",children:(0,n.jsx)(o.strong,{children:"Conclusion"})}),"\n",(0,n.jsx)(o.p,{children:"As Python projects continue to grow in size and complexity, having a fast, reliable, and scalable language server is essential for maintaining developer productivity (and our sanity to be honest). So if you\u2019re working on a large codebase and want an LSP designed with scalability in mind we invite you to give Pyrefly a try!"}),"\n",(0,n.jsxs)(o.p,{children:["While the project is still in Alpha we\u2019re especially eager to hear from more users like you about how the IDE extension performs on real world codebases. If you have any feedback, bug reports or feature requests please feel free to ",(0,n.jsx)(o.a,{href:"https://github.com/facebook/pyrefly/issues",children:"open a GitHub issue"}),", and if you have any questions or need support please come chat with us on ",(0,n.jsx)(o.a,{href:"https://discord.com/invite/Cf7mFQtW7W",children:"Discord"}),"!"]}),"\n",(0,n.jsx)(o.p,{children:"Happy coding, fellow pyreflies! \ud83d\udd25\ud83e\udeb0"})]})}function h(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}}}]);